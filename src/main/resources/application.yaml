server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      enabled: true
      charset: UTF-8
  forward-headers-strategy: framework
  address: 0.0.0.0

app:
  secret: ${APP_SECRET}
  jwt:
    token:
      expires-in: ${APP_JWT_TOKEN_EXPIRES_IN}
    refresh-token:
      expires-in: ${APP_JWT_REFRESH_TOKEN_EXPIRES_IN}
  default-locale: ${APP_DEFAULT_LOCALE}
  default-timezone: ${APP_DEFAULT_TIMEZONE}
  url: ${APP_URL}

# AI Configuration
ai:
  fastapi:
    base-url: ${AI_FASTAPI_BASE_URL:http://host.docker.internal:8000}

spring:
  application:
    name: ${APP_NAME}
    description: ${APP_DESCRIPTION}
  # Email Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  jpa:
    hibernate:
      ddl-auto: ${DB_DDL_AUTO:create-drop}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        format_sql: true
        globally_quoted_identifiers: true
        # Cho phép Hibernate tạo lại schema
        hbm2ddl:
          auto: create-drop
        # Bật lại validation
        check_nullability: true
        validator:
          apply_to_ddl: true
        use_sql_comments: true
    open-in-view: false
  datasource:
    url: jdbc:postgresql://${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DB}
    username: ${POSTGRESQL_USER}
    password: ${POSTGRESQL_PASSWORD}
  data:
    redis:
      database: ${REDIS_DATABASE}
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: ${REDIS_TIMEOUT}
    web:
      pageable:
        default-page-size: ${PAGEABLE_DEFAULT_PAGE_SIZE}
  messages:
    basename: locales.messages
    encoding:
      charset: UTF-8
      enabled: true
      force-encoding: true
  http:
    encoding:
      force-encoding: true
  jackson:
    mapper:
      accept-case-insensitive-enums: true

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    operationsSorter: alpha
    tagsSorter: alpha
    path: /swagger-ui.html
  show-actuator: true

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT}
    org:
      hibernate:
        type: ${LOGGING_LEVEL_HIBERNATE}
      springframework:
        web: ${LOGGING_LEVEL_SPRING}

cloudinary:
  cloud-name: ${CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}


paypal:
  client-id: ${CLIENT_ID}
  client-secret: ${SECRET_KEY}
  mode: ${PAYPAL_MODE}

socketio:
  port: 8081
  host: 0.0.0.0
